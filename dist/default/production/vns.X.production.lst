

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Aug 06 02:02:19 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36  0000                     
    37                           ; Version 2.05
    38                           ; Generated 20/12/2018 GMT
    39                           ; 
    40                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F46K22 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	nvCOMRAM
    73  000001                     __pnvCOMRAM:
    74                           	opt callstack 0
    75  000001                     _TMR1_InterruptHandler:
    76                           	opt callstack 0
    77  000001                     	ds	2
    78  000003                     _timer1ReloadVal:
    79                           	opt callstack 0
    80  000003                     	ds	2
    81  000005                     _cantidad_sleep:
    82                           	opt callstack 0
    83  000005                     	ds	2
    84  000007                     _TMR0_InterruptHandler:
    85                           	opt callstack 0
    86  000007                     	ds	2
    87  000009                     _ancho_pulso:
    88                           	opt callstack 0
    89  000009                     	ds	1
    90  00000A                     _first_time_mode:
    91                           	opt callstack 0
    92  00000A                     	ds	1
    93  00000B                     _cantidad_on:
    94                           	opt callstack 0
    95  00000B                     	ds	1
    96  00000C                     _timer0ReloadVal:
    97                           	opt callstack 0
    98  00000C                     	ds	1
    99  0000                     _ANSELA	set	3896
   100  0000                     _ANSELE	set	3900
   101  0000                     _ANSELB	set	3897
   102  0000                     _ANSELC	set	3898
   103  0000                     _ANSELD	set	3899
   104  0000                     _TMR1	set	4046
   105  0000                     _T1GCONbits	set	4044
   106  0000                     _T1CONbits	set	4045
   107  0000                     _T1CON	set	4045
   108  0000                     _TMR1L	set	4046
   109  0000                     _TMR1H	set	4047
   110  0000                     _T1GCON	set	4044
   111  0000                     _INTCON2bits	set	4081
   112  0000                     _WPUB	set	3937
   113  0000                     _TRISD	set	3989
   114  0000                     _TRISC	set	3988
   115  0000                     _TRISB	set	3987
   116  0000                     _TRISE	set	3990
   117  0000                     _LATC	set	3979
   118  0000                     _LATB	set	3978
   119  0000                     _LATD	set	3980
   120  0000                     _LATE	set	3981
   121  0000                     _OSCTUNE	set	3995
   122  0000                     _OSCCON2	set	4050
   123  0000                     _OSCCON	set	4051
   124  0000                     _PIR1bits	set	3998
   125  0000                     _PIE1bits	set	3997
   126  0000                     _RCONbits	set	4048
   127  0000                     _LATAbits	set	3977
   128  0000                     _LATA	set	3977
   129  0000                     _TRISA	set	3986
   130  0000                     _WDTCON	set	4049
   131  0000                     _T0CONbits	set	4053
   132  0000                     _T0CON	set	4053
   133  0000                     _INTCONbits	set	4082
   134  0000                     _TMR0L	set	4054
   135  0000                     _TMR0H	set	4055
   136                           
   137                           ; #config settings
   138  0000                     
   139                           	psect	cinit
   140  000284                     __pcinit:
   141                           	opt callstack 0
   142  000284                     start_initialization:
   143                           	opt callstack 0
   144  000284                     __initialization:
   145                           	opt callstack 0
   146                           
   147                           ; Clear objects allocated to COMRAM (8 bytes)
   148  000284  EE00  F016         	lfsr	0,__pbssCOMRAM
   149  000288  0E08               	movlw	8
   150  00028A                     clear_0:
   151  00028A  6AEE               	clrf	postinc0,c
   152  00028C  06E8               	decf	wreg,f,c
   153  00028E  E1FD               	bnz	clear_0
   154  000290                     end_of_initialization:
   155                           	opt callstack 0
   156  000290                     __end_of__initialization:
   157                           	opt callstack 0
   158  000290  901E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   159  000292  921E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   160  000294  0E00               	movlw	low (__Lmediumconst shr (0+16))
   161  000296  6EF8               	movwf	tblptru,c
   162  000298  0100               	movlb	0
   163  00029A  EF1D  F000         	goto	_main	;jump to C main() function
   164                           
   165                           	psect	bssCOMRAM
   166  000016                     __pbssCOMRAM:
   167                           	opt callstack 0
   168  000016                     	ds	2
   169  000018                     _contador_sleep:
   170                           	opt callstack 0
   171  000018                     	ds	2
   172  00001A                     _g_contador_on:
   173                           	opt callstack 0
   174  00001A                     	ds	2
   175  00001C                     _g_stimulate:
   176                           	opt callstack 0
   177  00001C                     	ds	1
   178  00001D                     _active_mode:
   179                           	opt callstack 0
   180  00001D                     	ds	1
   181                           
   182                           	psect	cstackCOMRAM
   183  00000D                     __pcstackCOMRAM:
   184                           	opt callstack 0
   185  00000D                     TMR1_WriteTimer@timerVal:
   186                           	opt callstack 0
   187                           
   188                           ; 2 bytes @ 0x0
   189  00000D                     	ds	2
   190  00000F                     ??_INTERRUPT_InterruptManager:
   191  00000F                     
   192                           ; 1 bytes @ 0x2
   193  00000F                     	ds	2
   194  000011                     ??_estimular_pw:
   195  000011                     TMR0_SetInterruptHandler@InterruptHandler:
   196                           	opt callstack 0
   197  000011                     TMR1_SetInterruptHandler@InterruptHandler:
   198                           	opt callstack 0
   199                           
   200                           ; 2 bytes @ 0x4
   201  000011                     	ds	2
   202  000013                     estimular_pw@pw:
   203                           	opt callstack 0
   204                           
   205                           ; 1 bytes @ 0x6
   206  000013                     	ds	1
   207  000014                     ??_main:
   208                           
   209                           ; 1 bytes @ 0x7
   210  000014                     	ds	2
   211                           
   212 ;;
   213 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   214 ;;
   215 ;; *************** function _main *****************
   216 ;; Defined at:
   217 ;;		line 91 in file "main.c"
   218 ;; Parameters:    Size  Location     Type
   219 ;;		None
   220 ;; Auto vars:     Size  Location     Type
   221 ;;		None
   222 ;; Return value:  Size  Location     Type
   223 ;;                  1    wreg      void 
   224 ;; Registers used:
   225 ;;		wreg, status,2, status,0, cstack
   226 ;; Tracked objects:
   227 ;;		On entry : 0/0
   228 ;;		On exit  : 0/0
   229 ;;		Unchanged: 0/0
   230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   233 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   234 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   235 ;;Total ram usage:        2 bytes
   236 ;; Hardware stack levels required when called:    6
   237 ;; This function calls:
   238 ;;		_SYSTEM_Initialize
   239 ;;		_activar_modulos
   240 ;;		_desactivar_modulos
   241 ;;		_estimular_pw
   242 ;;		_inicializar_dispositivo
   243 ;; This function is called by:
   244 ;;		Startup code after reset
   245 ;; This function uses a non-reentrant model
   246 ;;
   247                           
   248                           	psect	text0
   249  00003A                     __ptext0:
   250                           	opt callstack 0
   251  00003A                     _main:
   252                           	opt callstack 25
   253                           
   254                           ;main.c: 94:     SYSTEM_Initialize();
   255                           
   256                           ;incstack = 0
   257  00003A  EC5B  F001         	call	_SYSTEM_Initialize	;wreg free
   258                           
   259                           ;main.c: 95:     inicializar_dispositivo();
   260  00003E  ECBB  F000         	call	_inicializar_dispositivo	;wreg free
   261  000042  D01D               	goto	l104
   262  000044                     l1254:
   263                           
   264                           ;main.c: 116:         {;main.c: 117:             if(first_time_mode)
   265  000044  500A               	movf	_first_time_mode,w,c
   266  000046  B4D8               	btfsc	status,2,c
   267  000048  D004               	goto	l1260
   268                           
   269                           ;main.c: 118:             {;main.c: 119:                 activar_modulos();
   270  00004A  EC11  F001         	call	_activar_modulos	;wreg free
   271                           
   272                           ;main.c: 120:                 first_time_mode = 0;
   273  00004E  0E00               	movlw	0
   274  000050  6E0A               	movwf	_first_time_mode,c
   275  000052                     l1260:
   276                           
   277                           ;main.c: 122:             if(g_stimulate)
   278  000052  501C               	movf	_g_stimulate,w,c	;volatile
   279  000054  B4D8               	btfsc	status,2,c
   280  000056  D005               	goto	l1266
   281                           
   282                           ;main.c: 123:             {;main.c: 124:                 estimular_pw(ancho_pulso);
   283  000058  5009               	movf	_ancho_pulso,w,c
   284  00005A  EC62  F000         	call	_estimular_pw
   285                           
   286                           ;main.c: 125:                 g_stimulate = 0;
   287  00005E  0E00               	movlw	0
   288  000060  6E1C               	movwf	_g_stimulate,c	;volatile
   289  000062                     l1266:
   290                           
   291                           ;main.c: 127:             if(g_contador_on == cantidad_on)
   292  000062  500B               	movf	_cantidad_on,w,c
   293  000064  6E14               	movwf	??_main& (0+255),c
   294  000066  6A15               	clrf	(??_main+1)& (0+255),c
   295  000068  501A               	movf	_g_contador_on,w,c	;volatile
   296  00006A  1814               	xorwf	??_main,w,c
   297  00006C  E108               	bnz	l104
   298  00006E  501B               	movf	_g_contador_on+1,w,c	;volatile
   299  000070  1815               	xorwf	??_main+1,w,c
   300  000072  A4D8               	btfss	status,2,c
   301  000074  D004               	goto	l104
   302                           
   303                           ;main.c: 128:             {;main.c: 129:                 first_time_mode = 1;
   304  000076  0E01               	movlw	1
   305  000078  6E0A               	movwf	_first_time_mode,c
   306                           
   307                           ;main.c: 130:                 active_mode = 1;
   308  00007A  0E01               	movlw	1
   309  00007C  6E1D               	movwf	_active_mode,c
   310  00007E                     l104:
   311                           
   312                           ;main.c: 115:         while(active_mode == 0)
   313  00007E  501D               	movf	_active_mode,w,c
   314  000080  A4D8               	btfss	status,2,c
   315  000082  D01C               	goto	l1288
   316  000084  D7DF               	goto	l1254
   317  000086                     l1270:
   318                           
   319                           ;main.c: 137:         {;main.c: 138:             if(first_time_mode == 1)
   320  000086  040A               	decf	_first_time_mode,w,c
   321  000088  A4D8               	btfss	status,2,c
   322  00008A  D004               	goto	l1276
   323                           
   324                           ;main.c: 139:             {;main.c: 140:                 desactivar_modulos();
   325  00008C  EC4F  F001         	call	_desactivar_modulos	;wreg free
   326                           
   327                           ;main.c: 141:                 first_time_mode = 0;
   328  000090  0E00               	movlw	0
   329  000092  6E0A               	movwf	_first_time_mode,c
   330  000094                     l1276:
   331                           
   332                           ;main.c: 144:             WDTCON = 0x1;
   333  000094  0E01               	movlw	1
   334  000096  6ED1               	movwf	4049,c	;volatile
   335  000098  0003               	sleep		;# 
   336                           
   337                           ;main.c: 146:             __nop();
   338  00009A  F000               	nop	
   339                           
   340                           ;main.c: 147:             __nop();
   341  00009C  F000               	nop	
   342                           
   343                           ;main.c: 148:             ++contador_sleep;
   344  00009E  4A18               	infsnz	_contador_sleep,f,c
   345  0000A0  2A19               	incf	_contador_sleep+1,f,c
   346                           
   347                           ;main.c: 150:             if (contador_sleep == cantidad_sleep)
   348  0000A2  5005               	movf	_cantidad_sleep,w,c
   349  0000A4  1818               	xorwf	_contador_sleep,w,c
   350  0000A6  E10A               	bnz	l1288
   351  0000A8  5006               	movf	_cantidad_sleep+1,w,c
   352  0000AA  1819               	xorwf	_contador_sleep+1,w,c
   353  0000AC  A4D8               	btfss	status,2,c
   354  0000AE  D006               	goto	l1288
   355                           
   356                           ;main.c: 151:             {;main.c: 152:                 WDTCON = 0;
   357  0000B0  0E00               	movlw	0
   358  0000B2  6ED1               	movwf	4049,c	;volatile
   359                           
   360                           ;main.c: 153:                 active_mode = 0;
   361  0000B4  0E00               	movlw	0
   362  0000B6  6E1D               	movwf	_active_mode,c
   363                           
   364                           ;main.c: 154:                 first_time_mode = 1;
   365  0000B8  0E01               	movlw	1
   366  0000BA  6E0A               	movwf	_first_time_mode,c
   367  0000BC                     l1288:
   368                           
   369                           ;main.c: 136:         while(active_mode == 1)
   370  0000BC  041D               	decf	_active_mode,w,c
   371  0000BE  A4D8               	btfss	status,2,c
   372  0000C0  D7DE               	goto	l104
   373  0000C2  D7E1               	goto	l1270
   374  0000C4                     __end_of_main:
   375                           	opt callstack 0
   376                           
   377 ;; *************** function _inicializar_dispositivo *****************
   378 ;; Defined at:
   379 ;;		line 192 in file "main.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;		None
   382 ;; Auto vars:     Size  Location     Type
   383 ;;		None
   384 ;; Return value:  Size  Location     Type
   385 ;;                  1    wreg      void 
   386 ;; Registers used:
   387 ;;		wreg, status,2
   388 ;; Tracked objects:
   389 ;;		On entry : 0/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   397 ;;Total ram usage:        0 bytes
   398 ;; Hardware stack levels used:    1
   399 ;; Hardware stack levels required when called:    3
   400 ;; This function calls:
   401 ;;		Nothing
   402 ;; This function is called by:
   403 ;;		_main
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407                           	psect	text1
   408  000176                     __ptext1:
   409                           	opt callstack 0
   410  000176                     _inicializar_dispositivo:
   411                           	opt callstack 27
   412                           
   413                           ;main.c: 194:     (INTCONbits.GIE = 1);
   414                           
   415                           ;incstack = 0
   416  000176  8EF2               	bsf	4082,7,c	;volatile
   417                           
   418                           ;main.c: 195:     (INTCONbits.PEIE = 1);
   419  000178  8CF2               	bsf	4082,6,c	;volatile
   420                           
   421                           ;main.c: 196:     contador_sleep = 0;
   422  00017A  0E00               	movlw	0
   423  00017C  6E19               	movwf	_contador_sleep+1,c
   424  00017E  0E00               	movlw	0
   425  000180  6E18               	movwf	_contador_sleep,c
   426                           
   427                           ;main.c: 197:     g_contador_on = 0;
   428  000182  0E00               	movlw	0
   429  000184  6E1B               	movwf	_g_contador_on+1,c	;volatile
   430  000186  0E00               	movlw	0
   431  000188  6E1A               	movwf	_g_contador_on,c	;volatile
   432                           
   433                           ;main.c: 198:     cantidad_sleep = 1;
   434  00018A  0E00               	movlw	0
   435  00018C  6E06               	movwf	_cantidad_sleep+1,c
   436  00018E  0E01               	movlw	1
   437  000190  6E05               	movwf	_cantidad_sleep,c
   438                           
   439                           ;main.c: 199:     cantidad_on = 10;
   440  000192  0E0A               	movlw	10
   441  000194  6E0B               	movwf	_cantidad_on,c
   442                           
   443                           ;main.c: 200:     active_mode = 0;
   444  000196  0E00               	movlw	0
   445  000198  6E1D               	movwf	_active_mode,c
   446                           
   447                           ;main.c: 201:     first_time_mode = 1;
   448  00019A  0E01               	movlw	1
   449  00019C  6E0A               	movwf	_first_time_mode,c
   450                           
   451                           ;main.c: 202:     ancho_pulso = 1;
   452  00019E  0E01               	movlw	1
   453  0001A0  6E09               	movwf	_ancho_pulso,c
   454  0001A2  0012               	return		;funcret
   455  0001A4                     __end_of_inicializar_dispositivo:
   456                           	opt callstack 0
   457                           
   458 ;; *************** function _desactivar_modulos *****************
   459 ;; Defined at:
   460 ;;		line 166 in file "main.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;		None
   463 ;; Auto vars:     Size  Location     Type
   464 ;;		None
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg, status,2, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   478 ;;Total ram usage:        0 bytes
   479 ;; Hardware stack levels used:    1
   480 ;; Hardware stack levels required when called:    4
   481 ;; This function calls:
   482 ;;		_TMR0_StopTimer
   483 ;;		_TMR1_StopTimer
   484 ;; This function is called by:
   485 ;;		_main
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           	psect	text2
   490  00029E                     __ptext2:
   491                           	opt callstack 0
   492  00029E                     _desactivar_modulos:
   493                           	opt callstack 26
   494                           
   495                           ;main.c: 168:     TMR0_StopTimer();
   496                           
   497                           ;incstack = 0
   498  00029E  EC7F  F001         	call	_TMR0_StopTimer	;wreg free
   499                           
   500                           ;main.c: 169:     TMR1_StopTimer();
   501  0002A2  EC7D  F001         	call	_TMR1_StopTimer	;wreg free
   502                           
   503                           ;main.c: 170:     TRISA = 0xFF;
   504  0002A6  6892               	setf	3986,c	;volatile
   505                           
   506                           ;main.c: 171:     LATA = 0x00;
   507  0002A8  0E00               	movlw	0
   508  0002AA  6E89               	movwf	3977,c	;volatile
   509                           
   510                           ;main.c: 172:     contador_sleep = 0;
   511  0002AC  0E00               	movlw	0
   512  0002AE  6E19               	movwf	_contador_sleep+1,c
   513  0002B0  0E00               	movlw	0
   514  0002B2  6E18               	movwf	_contador_sleep,c
   515  0002B4  0012               	return		;funcret
   516  0002B6                     __end_of_desactivar_modulos:
   517                           	opt callstack 0
   518                           
   519 ;; *************** function _TMR1_StopTimer *****************
   520 ;; Defined at:
   521 ;;		line 100 in file "mcc_generated_files/tmr1.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;		None
   524 ;; Auto vars:     Size  Location     Type
   525 ;;		None
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      void 
   528 ;; Registers used:
   529 ;;		None
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   539 ;;Total ram usage:        0 bytes
   540 ;; Hardware stack levels used:    1
   541 ;; Hardware stack levels required when called:    3
   542 ;; This function calls:
   543 ;;		Nothing
   544 ;; This function is called by:
   545 ;;		_desactivar_modulos
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           	psect	text3
   550  0002FA                     __ptext3:
   551                           	opt callstack 0
   552  0002FA                     _TMR1_StopTimer:
   553                           	opt callstack 26
   554                           
   555                           ;mcc_generated_files/tmr1.c: 103:     T1CONbits.TMR1ON = 0;
   556                           
   557                           ;incstack = 0
   558  0002FA  90CD               	bcf	4045,0,c	;volatile
   559  0002FC  0012               	return		;funcret
   560  0002FE                     __end_of_TMR1_StopTimer:
   561                           	opt callstack 0
   562                           
   563 ;; *************** function _TMR0_StopTimer *****************
   564 ;; Defined at:
   565 ;;		line 101 in file "mcc_generated_files/tmr0.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;		None
   568 ;; Auto vars:     Size  Location     Type
   569 ;;		None
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		None
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   583 ;;Total ram usage:        0 bytes
   584 ;; Hardware stack levels used:    1
   585 ;; Hardware stack levels required when called:    3
   586 ;; This function calls:
   587 ;;		Nothing
   588 ;; This function is called by:
   589 ;;		_desactivar_modulos
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           	psect	text4
   594  0002FE                     __ptext4:
   595                           	opt callstack 0
   596  0002FE                     _TMR0_StopTimer:
   597                           	opt callstack 26
   598                           
   599                           ;mcc_generated_files/tmr0.c: 104:     T0CONbits.TMR0ON = 0;
   600                           
   601                           ;incstack = 0
   602  0002FE  9ED5               	bcf	4053,7,c	;volatile
   603  000300  0012               	return		;funcret
   604  000302                     __end_of_TMR0_StopTimer:
   605                           	opt callstack 0
   606                           
   607 ;; *************** function _activar_modulos *****************
   608 ;; Defined at:
   609 ;;		line 178 in file "main.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;		None
   612 ;; Auto vars:     Size  Location     Type
   613 ;;		None
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      void 
   616 ;; Registers used:
   617 ;;		wreg, status,2, status,0, cstack
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   627 ;;Total ram usage:        0 bytes
   628 ;; Hardware stack levels used:    1
   629 ;; Hardware stack levels required when called:    5
   630 ;; This function calls:
   631 ;;		_TMR0_Initialize
   632 ;;		_TMR0_StartTimer
   633 ;;		_TMR1_StartTimer
   634 ;;		_estimular_pw
   635 ;; This function is called by:
   636 ;;		_main
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           	psect	text5
   641  000222                     __ptext5:
   642                           	opt callstack 0
   643  000222                     _activar_modulos:
   644                           	opt callstack 25
   645                           
   646                           ;main.c: 180:     TRISA = 0x02;
   647                           
   648                           ;incstack = 0
   649  000222  0E02               	movlw	2
   650  000224  6E92               	movwf	3986,c	;volatile
   651                           
   652                           ;main.c: 181:     TMR0_Initialize();
   653  000226  EC23  F001         	call	_TMR0_Initialize	;wreg free
   654                           
   655                           ;main.c: 182:     TMR0_StartTimer();
   656  00022A  EC83  F001         	call	_TMR0_StartTimer	;wreg free
   657                           
   658                           ;main.c: 183:     TMR1_StartTimer();
   659  00022E  EC81  F001         	call	_TMR1_StartTimer	;wreg free
   660                           
   661                           ;main.c: 184:     estimular_pw(ancho_pulso);
   662  000232  5009               	movf	_ancho_pulso,w,c
   663  000234  EC62  F000         	call	_estimular_pw
   664                           
   665                           ;main.c: 185:     LATA = 0x01;
   666  000238  0E01               	movlw	1
   667  00023A  6E89               	movwf	3977,c	;volatile
   668                           
   669                           ;main.c: 186:     g_contador_on = 0;
   670  00023C  0E00               	movlw	0
   671  00023E  6E1B               	movwf	_g_contador_on+1,c	;volatile
   672  000240  0E00               	movlw	0
   673  000242  6E1A               	movwf	_g_contador_on,c	;volatile
   674  000244  0012               	return		;funcret
   675  000246                     __end_of_activar_modulos:
   676                           	opt callstack 0
   677                           
   678 ;; *************** function _estimular_pw *****************
   679 ;; Defined at:
   680 ;;		line 205 in file "main.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;  pw              1    wreg     unsigned char 
   683 ;; Auto vars:     Size  Location     Type
   684 ;;  pw              1    6[COMRAM] unsigned char 
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg, status,2, status,0
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   697 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   698 ;;Total ram usage:        3 bytes
   699 ;; Hardware stack levels used:    1
   700 ;; Hardware stack levels required when called:    3
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		_main
   705 ;;		_activar_modulos
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           	psect	text6
   710  0000C4                     __ptext6:
   711                           	opt callstack 0
   712  0000C4                     _estimular_pw:
   713                           	opt callstack 27
   714                           
   715                           ;incstack = 0
   716                           ;estimular_pw@pw stored from wreg
   717  0000C4  6E13               	movwf	estimular_pw@pw,c
   718                           
   719                           ;main.c: 205: void estimular_pw(uint8_t pw);main.c: 206: {;main.c: 207:     switch(pw)
   720  0000C6  D01F               	goto	l990
   721  0000C8                     l129:
   722                           
   723                           ;main.c: 210:             LATAbits.LATA1 = 1;
   724  0000C8  8289               	bsf	3977,1,c	;volatile
   725                           
   726                           ;main.c: 211:             LATAbits.LATA1 = 0;
   727  0000CA  9289               	bcf	3977,1,c	;volatile
   728                           
   729                           ;main.c: 212:         break;
   730  0000CC  0012               	return	
   731  0000CE                     l131:
   732                           
   733                           ;main.c: 215:             LATAbits.LATA1 = 1;
   734  0000CE  8289               	bsf	3977,1,c	;volatile
   735                           
   736                           ;main.c: 216:             __nop();
   737  0000D0  F000               	nop	
   738                           
   739                           ;main.c: 217:             LATAbits.LATA1 = 0;
   740  0000D2  9289               	bcf	3977,1,c	;volatile
   741                           
   742                           ;main.c: 218:         break;
   743  0000D4  0012               	return	
   744  0000D6                     l132:
   745                           
   746                           ;main.c: 221:             LATAbits.LATA1 = 1;
   747  0000D6  8289               	bsf	3977,1,c	;volatile
   748                           
   749                           ;main.c: 222:             __nop();
   750  0000D8  F000               	nop	
   751                           
   752                           ;main.c: 223:             __nop();
   753  0000DA  F000               	nop	
   754                           
   755                           ;main.c: 224:             __nop();
   756  0000DC  F000               	nop	
   757                           
   758                           ;main.c: 225:             LATAbits.LATA1 = 0;
   759  0000DE  9289               	bcf	3977,1,c	;volatile
   760                           
   761                           ;main.c: 226:         break;
   762  0000E0  0012               	return	
   763  0000E2                     l133:
   764                           
   765                           ;main.c: 229:             LATAbits.LATA1 = 1;
   766  0000E2  8289               	bsf	3977,1,c	;volatile
   767                           
   768                           ;main.c: 230:             __nop();
   769  0000E4  F000               	nop	
   770                           
   771                           ;main.c: 231:             __nop();
   772  0000E6  F000               	nop	
   773                           
   774                           ;main.c: 232:             __nop();
   775  0000E8  F000               	nop	
   776                           
   777                           ;main.c: 233:             __nop();
   778  0000EA  F000               	nop	
   779                           
   780                           ;main.c: 234:             __nop();
   781  0000EC  F000               	nop	
   782                           
   783                           ;main.c: 235:             LATAbits.LATA1 = 0;
   784  0000EE  9289               	bcf	3977,1,c	;volatile
   785                           
   786                           ;main.c: 236:         break;
   787  0000F0  0012               	return	
   788  0000F2                     l134:
   789                           
   790                           ;main.c: 239:             LATAbits.LATA1 = 1;
   791  0000F2  8289               	bsf	3977,1,c	;volatile
   792                           
   793                           ;main.c: 240:             __nop();
   794  0000F4  F000               	nop	
   795                           
   796                           ;main.c: 241:             __nop();
   797  0000F6  F000               	nop	
   798                           
   799                           ;main.c: 242:             __nop();
   800  0000F8  F000               	nop	
   801                           
   802                           ;main.c: 243:             __nop();
   803  0000FA  F000               	nop	
   804                           
   805                           ;main.c: 244:             __nop();
   806  0000FC  F000               	nop	
   807                           
   808                           ;main.c: 245:             __nop();
   809  0000FE  F000               	nop	
   810                           
   811                           ;main.c: 246:             __nop();
   812  000100  F000               	nop	
   813                           
   814                           ;main.c: 247:             LATAbits.LATA1 = 0;
   815  000102  9289               	bcf	3977,1,c	;volatile
   816                           
   817                           ;main.c: 248:         break;
   818  000104  0012               	return	
   819  000106                     l990:
   820  000106  5013               	movf	estimular_pw@pw,w,c
   821  000108  6E11               	movwf	??_estimular_pw& (0+255),c
   822  00010A  6A12               	clrf	(??_estimular_pw+1)& (0+255),c
   823                           
   824                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   825                           ; Switch size 1, requested type "simple"
   826                           ; Number of cases is 1, Range of values is 0 to 0
   827                           ; switch strategies available:
   828                           ; Name         Instructions Cycles
   829                           ; simple_byte            4     3 (average)
   830                           ;	Chosen strategy is simple_byte
   831  00010C  5012               	movf	??_estimular_pw+1,w,c
   832  00010E  0A00               	xorlw	0	; case 0
   833  000110  A4D8               	btfss	status,2,c
   834  000112  0012               	return	
   835                           
   836                           ; Switch size 1, requested type "simple"
   837                           ; Number of cases is 5, Range of values is 1 to 5
   838                           ; switch strategies available:
   839                           ; Name         Instructions Cycles
   840                           ; simple_byte           16     9 (average)
   841                           ;	Chosen strategy is simple_byte
   842  000114  5011               	movf	??_estimular_pw,w,c
   843  000116  0A01               	xorlw	1	; case 1
   844  000118  B4D8               	btfsc	status,2,c
   845  00011A  D7D6               	goto	l129
   846  00011C  0A03               	xorlw	3	; case 2
   847  00011E  B4D8               	btfsc	status,2,c
   848  000120  D7D6               	goto	l131
   849  000122  0A01               	xorlw	1	; case 3
   850  000124  B4D8               	btfsc	status,2,c
   851  000126  D7D7               	goto	l132
   852  000128  0A07               	xorlw	7	; case 4
   853  00012A  B4D8               	btfsc	status,2,c
   854  00012C  D7DA               	goto	l133
   855  00012E  0A01               	xorlw	1	; case 5
   856  000130  A4D8               	btfss	status,2,c
   857  000132  0012               	return	
   858  000134  D7DE               	goto	l134
   859  000136                     __end_of_estimular_pw:
   860                           	opt callstack 0
   861                           
   862 ;; *************** function _TMR1_StartTimer *****************
   863 ;; Defined at:
   864 ;;		line 94 in file "mcc_generated_files/tmr1.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;		None
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		None
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   882 ;;Total ram usage:        0 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; Hardware stack levels required when called:    3
   885 ;; This function calls:
   886 ;;		Nothing
   887 ;; This function is called by:
   888 ;;		_activar_modulos
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text7
   893  000302                     __ptext7:
   894                           	opt callstack 0
   895  000302                     _TMR1_StartTimer:
   896                           	opt callstack 26
   897                           
   898                           ;mcc_generated_files/tmr1.c: 97:     T1CONbits.TMR1ON = 1;
   899                           
   900                           ;incstack = 0
   901  000302  80CD               	bsf	4045,0,c	;volatile
   902  000304  0012               	return		;funcret
   903  000306                     __end_of_TMR1_StartTimer:
   904                           	opt callstack 0
   905                           
   906 ;; *************** function _TMR0_StartTimer *****************
   907 ;; Defined at:
   908 ;;		line 95 in file "mcc_generated_files/tmr0.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;		None
   911 ;; Auto vars:     Size  Location     Type
   912 ;;		None
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      void 
   915 ;; Registers used:
   916 ;;		None
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   926 ;;Total ram usage:        0 bytes
   927 ;; Hardware stack levels used:    1
   928 ;; Hardware stack levels required when called:    3
   929 ;; This function calls:
   930 ;;		Nothing
   931 ;; This function is called by:
   932 ;;		_activar_modulos
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           	psect	text8
   937  000306                     __ptext8:
   938                           	opt callstack 0
   939  000306                     _TMR0_StartTimer:
   940                           	opt callstack 26
   941                           
   942                           ;mcc_generated_files/tmr0.c: 98:     T0CONbits.TMR0ON = 1;
   943                           
   944                           ;incstack = 0
   945  000306  8ED5               	bsf	4053,7,c	;volatile
   946  000308  0012               	return		;funcret
   947  00030A                     __end_of_TMR0_StartTimer:
   948                           	opt callstack 0
   949                           
   950 ;; *************** function _SYSTEM_Initialize *****************
   951 ;; Defined at:
   952 ;;		line 50 in file "mcc_generated_files/mcc.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;		None
   955 ;; Auto vars:     Size  Location     Type
   956 ;;		None
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		wreg, status,2, status,0, cstack
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   970 ;;Total ram usage:        0 bytes
   971 ;; Hardware stack levels used:    1
   972 ;; Hardware stack levels required when called:    5
   973 ;; This function calls:
   974 ;;		_INTERRUPT_Initialize
   975 ;;		_OSCILLATOR_Initialize
   976 ;;		_PIN_MANAGER_Initialize
   977 ;;		_TMR0_Initialize
   978 ;;		_TMR1_Initialize
   979 ;; This function is called by:
   980 ;;		_main
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text9
   985  0002B6                     __ptext9:
   986                           	opt callstack 0
   987  0002B6                     _SYSTEM_Initialize:
   988                           	opt callstack 25
   989                           
   990                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
   991                           
   992                           ;incstack = 0
   993  0002B6  EC85  F001         	call	_INTERRUPT_Initialize	;wreg free
   994                           
   995                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
   996  0002BA  EC9B  F000         	call	_PIN_MANAGER_Initialize	;wreg free
   997                           
   998                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
   999  0002BE  EC66  F001         	call	_OSCILLATOR_Initialize	;wreg free
  1000                           
  1001                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  1002  0002C2  ECE9  F000         	call	_TMR1_Initialize	;wreg free
  1003                           
  1004                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  1005  0002C6  EC23  F001         	call	_TMR0_Initialize	;wreg free
  1006  0002CA  0012               	return		;funcret
  1007  0002CC                     __end_of_SYSTEM_Initialize:
  1008                           	opt callstack 0
  1009                           
  1010 ;; *************** function _TMR1_Initialize *****************
  1011 ;; Defined at:
  1012 ;;		line 65 in file "mcc_generated_files/tmr1.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1030 ;;Total ram usage:        0 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; Hardware stack levels required when called:    4
  1033 ;; This function calls:
  1034 ;;		_TMR1_SetInterruptHandler
  1035 ;; This function is called by:
  1036 ;;		_SYSTEM_Initialize
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           	psect	text10
  1041  0001D2                     __ptext10:
  1042                           	opt callstack 0
  1043  0001D2                     _TMR1_Initialize:
  1044                           	opt callstack 25
  1045                           
  1046                           ;mcc_generated_files/tmr1.c: 70:     T1GCON = 0x00;
  1047                           
  1048                           ;incstack = 0
  1049  0001D2  0E00               	movlw	0
  1050  0001D4  6ECC               	movwf	4044,c	;volatile
  1051                           
  1052                           ;mcc_generated_files/tmr1.c: 73:     TMR1H = 0xFE;
  1053  0001D6  0EFE               	movlw	254
  1054  0001D8  6ECF               	movwf	4047,c	;volatile
  1055                           
  1056                           ;mcc_generated_files/tmr1.c: 76:     TMR1L = 0xFE;
  1057  0001DA  0EFE               	movlw	254
  1058  0001DC  6ECE               	movwf	4046,c	;volatile
  1059                           
  1060                           ;mcc_generated_files/tmr1.c: 79:     timer1ReloadVal=TMR1;
  1061  0001DE  CFCE F003          	movff	4046,_timer1ReloadVal	;volatile
  1062  0001E2  CFCF F004          	movff	4047,_timer1ReloadVal+1	;volatile
  1063                           
  1064                           ;mcc_generated_files/tmr1.c: 82:     PIR1bits.TMR1IF = 0;
  1065  0001E6  909E               	bcf	3998,0,c	;volatile
  1066                           
  1067                           ;mcc_generated_files/tmr1.c: 85:     PIE1bits.TMR1IE = 1;
  1068  0001E8  809D               	bsf	3997,0,c	;volatile
  1069                           
  1070                           ;mcc_generated_files/tmr1.c: 88:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  1071  0001EA  0EEE               	movlw	low _TMR1_DefaultInterruptHandler
  1072  0001EC  6E11               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  1073  0001EE  0E02               	movlw	high _TMR1_DefaultInterruptHandler
  1074  0001F0  6E12               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  1075  0001F2  EC6D  F001         	call	_TMR1_SetInterruptHandler	;wreg free
  1076                           
  1077                           ;mcc_generated_files/tmr1.c: 91:     T1CON = 0x05;
  1078  0001F6  0E05               	movlw	5
  1079  0001F8  6ECD               	movwf	4045,c	;volatile
  1080  0001FA  0012               	return		;funcret
  1081  0001FC                     __end_of_TMR1_Initialize:
  1082                           	opt callstack 0
  1083                           
  1084 ;; *************** function _TMR1_SetInterruptHandler *****************
  1085 ;; Defined at:
  1086 ;;		line 173 in file "mcc_generated_files/tmr1.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  1089 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;		None
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  1    wreg      void 
  1094 ;; Registers used:
  1095 ;;		wreg, status,2, status,0
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1101 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1104 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1105 ;;Total ram usage:        2 bytes
  1106 ;; Hardware stack levels used:    1
  1107 ;; Hardware stack levels required when called:    3
  1108 ;; This function calls:
  1109 ;;		Nothing
  1110 ;; This function is called by:
  1111 ;;		_TMR1_Initialize
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text11
  1116  0002DA                     __ptext11:
  1117                           	opt callstack 0
  1118  0002DA                     _TMR1_SetInterruptHandler:
  1119                           	opt callstack 25
  1120                           
  1121                           ;mcc_generated_files/tmr1.c: 174:     TMR1_InterruptHandler = InterruptHandler;
  1122                           
  1123                           ;incstack = 0
  1124  0002DA  C011  F001         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  1125  0002DE  C012  F002         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  1126  0002E2  0012               	return		;funcret
  1127  0002E4                     __end_of_TMR1_SetInterruptHandler:
  1128                           	opt callstack 0
  1129                           
  1130 ;; *************** function _TMR0_Initialize *****************
  1131 ;; Defined at:
  1132 ;;		line 68 in file "mcc_generated_files/tmr0.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;		None
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;		None
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, status,2, status,0, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1150 ;;Total ram usage:        0 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; Hardware stack levels required when called:    4
  1153 ;; This function calls:
  1154 ;;		_TMR0_SetInterruptHandler
  1155 ;; This function is called by:
  1156 ;;		_activar_modulos
  1157 ;;		_SYSTEM_Initialize
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	text12
  1162  000246                     __ptext12:
  1163                           	opt callstack 0
  1164  000246                     _TMR0_Initialize:
  1165                           	opt callstack 25
  1166                           
  1167                           ;mcc_generated_files/tmr0.c: 73:     TMR0H = 0x00;
  1168                           
  1169                           ;incstack = 0
  1170  000246  0E00               	movlw	0
  1171  000248  6ED7               	movwf	4055,c	;volatile
  1172                           
  1173                           ;mcc_generated_files/tmr0.c: 76:     TMR0L = 0x88;
  1174  00024A  0E88               	movlw	136
  1175  00024C  6ED6               	movwf	4054,c	;volatile
  1176                           
  1177                           ;mcc_generated_files/tmr0.c: 80:     timer0ReloadVal = 136;
  1178  00024E  0E88               	movlw	136
  1179  000250  6E0C               	movwf	_timer0ReloadVal,c	;volatile
  1180                           
  1181                           ;mcc_generated_files/tmr0.c: 83:     INTCONbits.TMR0IF = 0;
  1182  000252  94F2               	bcf	4082,2,c	;volatile
  1183                           
  1184                           ;mcc_generated_files/tmr0.c: 86:     INTCONbits.TMR0IE = 1;
  1185  000254  8AF2               	bsf	4082,5,c	;volatile
  1186                           
  1187                           ;mcc_generated_files/tmr0.c: 89:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  1188  000256  0EF4               	movlw	low _TMR0_DefaultInterruptHandler
  1189  000258  6E11               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  1190  00025A  0E02               	movlw	high _TMR0_DefaultInterruptHandler
  1191  00025C  6E12               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  1192  00025E  EC72  F001         	call	_TMR0_SetInterruptHandler	;wreg free
  1193                           
  1194                           ;mcc_generated_files/tmr0.c: 92:     T0CON = 0xD5;
  1195  000262  0ED5               	movlw	213
  1196  000264  6ED5               	movwf	4053,c	;volatile
  1197  000266  0012               	return		;funcret
  1198  000268                     __end_of_TMR0_Initialize:
  1199                           	opt callstack 0
  1200                           
  1201 ;; *************** function _TMR0_SetInterruptHandler *****************
  1202 ;; Defined at:
  1203 ;;		line 148 in file "mcc_generated_files/tmr0.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;  InterruptHan    2    4[COMRAM] PTR FTN()void 
  1206 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;		None
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1    wreg      void 
  1211 ;; Registers used:
  1212 ;;		wreg, status,2, status,0
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1218 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1221 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;Total ram usage:        2 bytes
  1223 ;; Hardware stack levels used:    1
  1224 ;; Hardware stack levels required when called:    3
  1225 ;; This function calls:
  1226 ;;		Nothing
  1227 ;; This function is called by:
  1228 ;;		_TMR0_Initialize
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           	psect	text13
  1233  0002E4                     __ptext13:
  1234                           	opt callstack 0
  1235  0002E4                     _TMR0_SetInterruptHandler:
  1236                           	opt callstack 25
  1237                           
  1238                           ;mcc_generated_files/tmr0.c: 149:     TMR0_InterruptHandler = InterruptHandler;
  1239                           
  1240                           ;incstack = 0
  1241  0002E4  C011  F007         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1242  0002E8  C012  F008         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1243  0002EC  0012               	return		;funcret
  1244  0002EE                     __end_of_TMR0_SetInterruptHandler:
  1245                           	opt callstack 0
  1246                           
  1247 ;; *************** function _PIN_MANAGER_Initialize *****************
  1248 ;; Defined at:
  1249 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;		None
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;		None
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      void 
  1256 ;; Registers used:
  1257 ;;		wreg, status,2
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1267 ;;Total ram usage:        0 bytes
  1268 ;; Hardware stack levels used:    1
  1269 ;; Hardware stack levels required when called:    3
  1270 ;; This function calls:
  1271 ;;		Nothing
  1272 ;; This function is called by:
  1273 ;;		_SYSTEM_Initialize
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           	psect	text14
  1278  000136                     __ptext14:
  1279                           	opt callstack 0
  1280  000136                     _PIN_MANAGER_Initialize:
  1281                           	opt callstack 26
  1282                           
  1283                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1284                           
  1285                           ;incstack = 0
  1286  000136  0E00               	movlw	0
  1287  000138  6E8D               	movwf	3981,c	;volatile
  1288                           
  1289                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1290  00013A  0E00               	movlw	0
  1291  00013C  6E8C               	movwf	3980,c	;volatile
  1292                           
  1293                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1294  00013E  0E00               	movlw	0
  1295  000140  6E89               	movwf	3977,c	;volatile
  1296                           
  1297                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1298  000142  0E00               	movlw	0
  1299  000144  6E8A               	movwf	3978,c	;volatile
  1300                           
  1301                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1302  000146  0E00               	movlw	0
  1303  000148  6E8B               	movwf	3979,c	;volatile
  1304                           
  1305                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  1306  00014A  0E07               	movlw	7
  1307  00014C  6E96               	movwf	3990,c	;volatile
  1308                           
  1309                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFC;
  1310  00014E  0EFC               	movlw	252
  1311  000150  6E92               	movwf	3986,c	;volatile
  1312                           
  1313                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  1314  000152  6893               	setf	3987,c	;volatile
  1315                           
  1316                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  1317  000154  6894               	setf	3988,c	;volatile
  1318                           
  1319                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  1320  000156  6895               	setf	3989,c	;volatile
  1321                           
  1322                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
  1323  000158  0E00               	movlw	0
  1324  00015A  010F               	movlb	15	; () banked
  1325  00015C  6F3B               	movwf	59,b	;volatile
  1326                           
  1327                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x00;
  1328  00015E  0E00               	movlw	0
  1329  000160  6F3A               	movwf	58,b	;volatile
  1330                           
  1331                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x00;
  1332  000162  0E00               	movlw	0
  1333  000164  6F39               	movwf	57,b	;volatile
  1334                           
  1335                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x00;
  1336  000166  0E00               	movlw	0
  1337  000168  6F3C               	movwf	60,b	;volatile
  1338                           
  1339                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x00;
  1340  00016A  0E00               	movlw	0
  1341  00016C  6F38               	movwf	56,b	;volatile
  1342                           
  1343                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  1344  00016E  0E00               	movlw	0
  1345  000170  6E61               	movwf	3937,c	;volatile
  1346                           
  1347                           ; BSR set to: 15
  1348                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
  1349  000172  8EF1               	bsf	4081,7,c	;volatile
  1350                           
  1351                           ; BSR set to: 15
  1352  000174  0012               	return		;funcret
  1353  000176                     __end_of_PIN_MANAGER_Initialize:
  1354                           	opt callstack 0
  1355                           
  1356 ;; *************** function _OSCILLATOR_Initialize *****************
  1357 ;; Defined at:
  1358 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg, status,2
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;Total ram usage:        0 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; Hardware stack levels required when called:    3
  1379 ;; This function calls:
  1380 ;;		Nothing
  1381 ;; This function is called by:
  1382 ;;		_SYSTEM_Initialize
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           	psect	text15
  1387  0002CC                     __ptext15:
  1388                           	opt callstack 0
  1389  0002CC                     _OSCILLATOR_Initialize:
  1390                           	opt callstack 26
  1391                           
  1392                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x02;
  1393                           
  1394                           ; BSR set to: 15
  1395                           ;incstack = 0
  1396  0002CC  0E02               	movlw	2
  1397  0002CE  6ED3               	movwf	4051,c	;volatile
  1398                           
  1399                           ;mcc_generated_files/mcc.c: 65:     OSCCON2 = 0x04;
  1400  0002D0  0E04               	movlw	4
  1401  0002D2  6ED2               	movwf	4050,c	;volatile
  1402                           
  1403                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  1404  0002D4  0E00               	movlw	0
  1405  0002D6  6E9B               	movwf	3995,c	;volatile
  1406  0002D8  0012               	return		;funcret
  1407  0002DA                     __end_of_OSCILLATOR_Initialize:
  1408                           	opt callstack 0
  1409                           
  1410 ;; *************** function _INTERRUPT_Initialize *****************
  1411 ;; Defined at:
  1412 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;		None
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		None
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1430 ;;Total ram usage:        0 bytes
  1431 ;; Hardware stack levels used:    1
  1432 ;; Hardware stack levels required when called:    3
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_SYSTEM_Initialize
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text16
  1441  00030A                     __ptext16:
  1442                           	opt callstack 0
  1443  00030A                     _INTERRUPT_Initialize:
  1444                           	opt callstack 26
  1445                           
  1446                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  1447                           
  1448                           ;incstack = 0
  1449  00030A  9ED0               	bcf	4048,7,c	;volatile
  1450  00030C  0012               	return		;funcret
  1451  00030E                     __end_of_INTERRUPT_Initialize:
  1452                           	opt callstack 0
  1453                           
  1454 ;; *************** function _INTERRUPT_InterruptManager *****************
  1455 ;; Defined at:
  1456 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;		None
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;		None
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  1    wreg      void 
  1463 ;; Registers used:
  1464 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1472 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1473 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;Total ram usage:        2 bytes
  1475 ;; Hardware stack levels used:    1
  1476 ;; Hardware stack levels required when called:    2
  1477 ;; This function calls:
  1478 ;;		_TMR0_ISR
  1479 ;;		_TMR1_ISR
  1480 ;; This function is called by:
  1481 ;;		Interrupt level 2
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           	psect	intcode
  1486  000008                     __pintcode:
  1487                           	opt callstack 0
  1488  000008                     _INTERRUPT_InterruptManager:
  1489                           	opt callstack 25
  1490                           
  1491                           ;incstack = 0
  1492  000008  821E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1493  00000A  CFFA F00F          	movff	pclath,??_INTERRUPT_InterruptManager
  1494  00000E  CFFB F010          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1495                           
  1496                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  1497  000012  BAF2               	btfsc	4082,5,c	;volatile
  1498  000014  A4F2               	btfss	4082,2,c	;volatile
  1499  000016  D003               	goto	i2l156
  1500                           
  1501                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  1502  000018  ECFE  F000         	call	_TMR0_ISR	;wreg free
  1503                           
  1504                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  1505  00001C  D006               	goto	i2l161
  1506  00001E                     i2l156:
  1507  00001E  BCF2               	btfsc	4082,6,c	;volatile
  1508                           
  1509                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  1510  000020  A09D               	btfss	3997,0,c	;volatile
  1511  000022  D003               	goto	i2l161
  1512  000024  B09E               	btfsc	3998,0,c	;volatile
  1513                           
  1514                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             TMR1_ISR();
  1515  000026  ECD2  F000         	call	_TMR1_ISR	;wreg free
  1516  00002A                     i2l161:
  1517  00002A  C010  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1518  00002E  C00F  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1519  000032  921E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1520  000034  0011               	retfie		f
  1521  000036                     __end_of_INTERRUPT_InterruptManager:
  1522                           	opt callstack 0
  1523                           
  1524 ;; *************** function _TMR1_ISR *****************
  1525 ;; Defined at:
  1526 ;;		line 159 in file "mcc_generated_files/tmr1.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;		None
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;		None
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1544 ;;Total ram usage:        0 bytes
  1545 ;; Hardware stack levels used:    1
  1546 ;; Hardware stack levels required when called:    1
  1547 ;; This function calls:
  1548 ;;		Absolute function
  1549 ;;		_TMR1_DefaultInterruptHandler
  1550 ;;		_TMR1_WriteTimer
  1551 ;; This function is called by:
  1552 ;;		_INTERRUPT_InterruptManager
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           	psect	text18
  1557  0001A4                     __ptext18:
  1558                           	opt callstack 0
  1559  0001A4                     _TMR1_ISR:
  1560                           	opt callstack 25
  1561                           
  1562                           ;mcc_generated_files/tmr1.c: 163:     PIR1bits.TMR1IF = 0;
  1563                           
  1564                           ;incstack = 0
  1565  0001A4  909E               	bcf	3998,0,c	;volatile
  1566                           
  1567                           ;mcc_generated_files/tmr1.c: 164:     TMR1_WriteTimer(timer1ReloadVal);
  1568  0001A6  C003  F00D         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  1569  0001AA  C004  F00E         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  1570  0001AE  EC34  F001         	call	_TMR1_WriteTimer	;wreg free
  1571                           
  1572                           ;mcc_generated_files/tmr1.c: 166:     if(TMR1_InterruptHandler)
  1573  0001B2  5001               	movf	_TMR1_InterruptHandler,w,c
  1574  0001B4  1002               	iorwf	_TMR1_InterruptHandler+1,w,c
  1575  0001B6  B4D8               	btfsc	status,2,c
  1576  0001B8  0012               	return	
  1577                           
  1578                           ;mcc_generated_files/tmr1.c: 167:     {;mcc_generated_files/tmr1.c: 168:         TMR1_In
      +                          terruptHandler();
  1579  0001BA  D801               	call	i2u20_48
  1580  0001BC  0012               	return	
  1581  0001BE                     i2u20_48:
  1582  0001BE  0005               	push	
  1583  0001C0  6EFA               	movwf	pclath,c
  1584  0001C2  5001               	movf	_TMR1_InterruptHandler,w,c
  1585  0001C4  6EFD               	movwf	tosl,c
  1586  0001C6  5002               	movf	_TMR1_InterruptHandler+1,w,c
  1587  0001C8  6EFE               	movwf	tosh,c
  1588  0001CA  50F8               	movf	tblptru,w,c
  1589  0001CC  6EFF               	movwf	tosu,c
  1590  0001CE  50FA               	movf	pclath,w,c
  1591  0001D0  0012               	return		;indir
  1592  0001D2                     __end_of_TMR1_ISR:
  1593                           	opt callstack 0
  1594                           
  1595 ;; *************** function _TMR1_WriteTimer *****************
  1596 ;; Defined at:
  1597 ;;		line 122 in file "mcc_generated_files/tmr1.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;  timerVal        2    0[COMRAM] unsigned short 
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;		None
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1    wreg      void 
  1604 ;; Registers used:
  1605 ;;		wreg, status,2
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1611 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;Total ram usage:        2 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; This function calls:
  1618 ;;		Nothing
  1619 ;; This function is called by:
  1620 ;;		_TMR1_ISR
  1621 ;;		_TMR1_Reload
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           	psect	text19
  1626  000268                     __ptext19:
  1627                           	opt callstack 0
  1628  000268                     _TMR1_WriteTimer:
  1629                           	opt callstack 25
  1630                           
  1631                           ;mcc_generated_files/tmr1.c: 122: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 123: {;mcc_generated_files/tmr1.c: 124:     if (T1CONbits.T1SYNC == 1)
  1632                           
  1633                           ;incstack = 0
  1634  000268  A4CD               	btfss	4045,2,c	;volatile
  1635  00026A  D007               	goto	i2l1218
  1636                           
  1637                           ;mcc_generated_files/tmr1.c: 125:     {;mcc_generated_files/tmr1.c: 127:         T1CONbi
      +                          ts.TMR1ON = 0;
  1638  00026C  90CD               	bcf	4045,0,c	;volatile
  1639                           
  1640                           ;mcc_generated_files/tmr1.c: 130:         TMR1H = (timerVal >> 8);
  1641  00026E  500E               	movf	TMR1_WriteTimer@timerVal+1,w,c
  1642  000270  6ECF               	movwf	4047,c	;volatile
  1643                           
  1644                           ;mcc_generated_files/tmr1.c: 131:         TMR1L = (uint8_t) timerVal;
  1645  000272  C00D  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  1646                           
  1647                           ;mcc_generated_files/tmr1.c: 134:         T1CONbits.TMR1ON =1;
  1648  000276  80CD               	bsf	4045,0,c	;volatile
  1649                           
  1650                           ;mcc_generated_files/tmr1.c: 135:     }
  1651  000278  0012               	return	
  1652  00027A                     i2l1218:
  1653                           
  1654                           ;mcc_generated_files/tmr1.c: 137:     {;mcc_generated_files/tmr1.c: 139:         TMR1H =
      +                           (timerVal >> 8);
  1655  00027A  500E               	movf	TMR1_WriteTimer@timerVal+1,w,c
  1656  00027C  6ECF               	movwf	4047,c	;volatile
  1657                           
  1658                           ;mcc_generated_files/tmr1.c: 140:         TMR1L = (uint8_t) timerVal;
  1659  00027E  C00D  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  1660  000282  0012               	return		;funcret
  1661  000284                     __end_of_TMR1_WriteTimer:
  1662                           	opt callstack 0
  1663                           
  1664 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  1665 ;; Defined at:
  1666 ;;		line 177 in file "mcc_generated_files/tmr1.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;		None
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;		None
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  1    wreg      void 
  1673 ;; Registers used:
  1674 ;;		wreg, status,2
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1684 ;;Total ram usage:        0 bytes
  1685 ;; Hardware stack levels used:    1
  1686 ;; This function calls:
  1687 ;;		Nothing
  1688 ;; This function is called by:
  1689 ;;		_TMR1_Initialize
  1690 ;;		_TMR1_ISR
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text20
  1695  0002EE                     __ptext20:
  1696                           	opt callstack 0
  1697  0002EE                     _TMR1_DefaultInterruptHandler:
  1698                           	opt callstack 25
  1699                           
  1700                           ;mcc_generated_files/tmr1.c: 180:     g_stimulate = 1;
  1701                           
  1702                           ;incstack = 0
  1703  0002EE  0E01               	movlw	1
  1704  0002F0  6E1C               	movwf	_g_stimulate,c	;volatile
  1705  0002F2  0012               	return		;funcret
  1706  0002F4                     __end_of_TMR1_DefaultInterruptHandler:
  1707                           	opt callstack 0
  1708                           
  1709 ;; *************** function _TMR0_ISR *****************
  1710 ;; Defined at:
  1711 ;;		line 130 in file "mcc_generated_files/tmr0.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;Total ram usage:        0 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    1
  1732 ;; This function calls:
  1733 ;;		Absolute function
  1734 ;;		_TMR0_DefaultInterruptHandler
  1735 ;; This function is called by:
  1736 ;;		_INTERRUPT_InterruptManager
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text21
  1741  0001FC                     __ptext21:
  1742                           	opt callstack 0
  1743  0001FC                     _TMR0_ISR:
  1744                           	opt callstack 25
  1745                           
  1746                           ;mcc_generated_files/tmr0.c: 134:     INTCONbits.TMR0IF = 0;
  1747                           
  1748                           ;incstack = 0
  1749  0001FC  94F2               	bcf	4082,2,c	;volatile
  1750                           
  1751                           ;mcc_generated_files/tmr0.c: 137:     TMR0L = timer0ReloadVal;
  1752  0001FE  C00C  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  1753                           
  1754                           ;mcc_generated_files/tmr0.c: 139:     if(TMR0_InterruptHandler)
  1755  000202  5007               	movf	_TMR0_InterruptHandler,w,c
  1756  000204  1008               	iorwf	_TMR0_InterruptHandler+1,w,c
  1757  000206  B4D8               	btfsc	status,2,c
  1758  000208  0012               	return	
  1759                           
  1760                           ;mcc_generated_files/tmr0.c: 140:     {;mcc_generated_files/tmr0.c: 141:         TMR0_In
      +                          terruptHandler();
  1761  00020A  D801               	call	i2u3_48
  1762  00020C  0012               	return	
  1763  00020E                     i2u3_48:
  1764  00020E  0005               	push	
  1765  000210  6EFA               	movwf	pclath,c
  1766  000212  5007               	movf	_TMR0_InterruptHandler,w,c
  1767  000214  6EFD               	movwf	tosl,c
  1768  000216  5008               	movf	_TMR0_InterruptHandler+1,w,c
  1769  000218  6EFE               	movwf	tosh,c
  1770  00021A  50F8               	movf	tblptru,w,c
  1771  00021C  6EFF               	movwf	tosu,c
  1772  00021E  50FA               	movf	pclath,w,c
  1773  000220  0012               	return		;indir
  1774  000222                     __end_of_TMR0_ISR:
  1775                           	opt callstack 0
  1776                           
  1777 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  1778 ;; Defined at:
  1779 ;;		line 152 in file "mcc_generated_files/tmr0.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;		None
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;		None
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      void 
  1786 ;; Registers used:
  1787 ;;		status,2, status,0
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1797 ;;Total ram usage:        0 bytes
  1798 ;; Hardware stack levels used:    1
  1799 ;; This function calls:
  1800 ;;		Nothing
  1801 ;; This function is called by:
  1802 ;;		_TMR0_Initialize
  1803 ;;		_TMR0_ISR
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           	psect	text22
  1808  0002F4                     __ptext22:
  1809                           	opt callstack 0
  1810  0002F4                     _TMR0_DefaultInterruptHandler:
  1811                           	opt callstack 25
  1812                           
  1813                           ;mcc_generated_files/tmr0.c: 155:     ++g_contador_on;
  1814                           
  1815                           ;incstack = 0
  1816  0002F4  4A1A               	infsnz	_g_contador_on,f,c	;volatile
  1817  0002F6  2A1B               	incf	_g_contador_on+1,f,c	;volatile
  1818  0002F8  0012               	return		;funcret
  1819  0002FA                     __end_of_TMR0_DefaultInterruptHandler:
  1820                           	opt callstack 0
  1821  0000                     
  1822                           	psect	text23
  1823  000000                     __ptext23:
  1824                           	opt callstack 0
  1825                           
  1826                           	psect	rparam
  1827  0000                     
  1828                           	psect	temp
  1829  00001E                     btemp:
  1830                           	opt callstack 0
  1831  00001E                     	ds	1
  1832  0000                     int$flags	set	btemp
  1833  0000                     wtemp8	set	btemp+1
  1834  0000                     ttemp5	set	btemp+1
  1835  0000                     ttemp6	set	btemp+4
  1836  0000                     ttemp7	set	btemp+8
  1837                           tosu	equ	0xFFF
  1838                           tosh	equ	0xFFE
  1839                           tosl	equ	0xFFD
  1840                           stkptr	equ	0xFFC
  1841                           pclatu	equ	0xFFB
  1842                           pclath	equ	0xFFA
  1843                           pcl	equ	0xFF9
  1844                           tblptru	equ	0xFF8
  1845                           tblptrh	equ	0xFF7
  1846                           tblptrl	equ	0xFF6
  1847                           tablat	equ	0xFF5
  1848                           prodh	equ	0xFF4
  1849                           prodl	equ	0xFF3
  1850                           indf0	equ	0xFEF
  1851                           postinc0	equ	0xFEE
  1852                           postdec0	equ	0xFED
  1853                           preinc0	equ	0xFEC
  1854                           plusw0	equ	0xFEB
  1855                           fsr0h	equ	0xFEA
  1856                           fsr0l	equ	0xFE9
  1857                           wreg	equ	0xFE8
  1858                           indf1	equ	0xFE7
  1859                           postinc1	equ	0xFE6
  1860                           postdec1	equ	0xFE5
  1861                           preinc1	equ	0xFE4
  1862                           plusw1	equ	0xFE3
  1863                           fsr1h	equ	0xFE2
  1864                           fsr1l	equ	0xFE1
  1865                           bsr	equ	0xFE0
  1866                           indf2	equ	0xFDF
  1867                           postinc2	equ	0xFDE
  1868                           postdec2	equ	0xFDD
  1869                           preinc2	equ	0xFDC
  1870                           plusw2	equ	0xFDB
  1871                           fsr2h	equ	0xFDA
  1872                           fsr2l	equ	0xFD9
  1873                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      9      29
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_estimular_pw
    _activar_modulos->_estimular_pw
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     324
                                              7 COMRAM     2     2      0
                  _SYSTEM_Initialize
                    _activar_modulos
                 _desactivar_modulos
                       _estimular_pw
            _inicializar_dispositivo
 ---------------------------------------------------------------------------------
 (1) _inicializar_dispositivo                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _desactivar_modulos                                   0     0      0       0
                     _TMR0_StopTimer
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _activar_modulos                                      0     0      0     113
                    _TMR0_Initialize
                    _TMR0_StartTimer
                    _TMR1_StartTimer
                       _estimular_pw
 ---------------------------------------------------------------------------------
 (1) _estimular_pw                                         3     3      0      15
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     196
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0     240
                                              2 COMRAM     2     2      0
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _activar_modulos
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR0_StartTimer
     _TMR1_StartTimer
     _estimular_pw
   _desactivar_modulos
     _TMR0_StopTimer
     _TMR1_StopTimer
   _estimular_pw
   _inicializar_dispositivo

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      9      1D       1       30.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1D      12        0.0%
DATA                 0      0      1D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Aug 06 02:02:19 2019

                         _timer0ReloadVal 000C                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                               __CFG_LVP$ON 000000  
                                     l104 007E                                       l131 00CE  
                                     l132 00D6                                       l133 00E2  
                                     l134 00F2                                       l129 00C8  
                                     l990 0106                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                           _timer1ReloadVal 0003  
                                     tosl 000FFD                                       wreg 000FE8  
                            __CFG_FOSC$LP 000000                         ??_activar_modulos 0014  
                                    l1260 0052                                      l1270 0086  
                                    l1254 0044                                      l1266 0062  
                                    l1276 0094                                      l1288 00BC  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      _TMR1 000FCE  
                                    _WPUB 000F61                            _contador_sleep 0018  
                                    _main 003A                           _TMR0_StartTimer 0306  
                                    btemp 001E                             __CFG_BORV$190 000000  
                                    start 0036                             __CFG_IESO$OFF 000000  
                          estimular_pw@pw 0013                ??_TMR1_SetInterruptHandler 0013  
                            ___param_bank 000000                   __end_of_TMR0_Initialize 0268  
          ??_TMR0_DefaultInterruptHandler 000D            __size_of_OSCILLATOR_Initialize 000E  
           __end_of_OSCILLATOR_Initialize 02DA                                     ?_main 000D  
                         _TMR1_StartTimer 0302                                     _T0CON 000FD5  
                                   _T1CON 000FCD                            __CFG_DEBUG$OFF 000000  
                                   i2l161 002A                                     i2l156 001E  
                                   _TMR0H 000FD7                                     _TMR1H 000FCF  
                                   _TMR0L 000FD6                                     _TMR1L 000FCE  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96         __size_of_TMR0_SetInterruptHandler 000A  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                 ?_TMR0_SetInterruptHandler 0011  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                        __end_of_TMR0_ISR 0222                          __end_of_TMR1_ISR 01D2  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                      __CFG_MCLRE$EXTMCLR 000000                   __end_of_TMR1_Initialize 01FC  
                                   pclath 000FFA                                     ttemp5 001F  
                                   ttemp6 0022                                     ttemp7 0026  
                                   status 000FD8                                     wtemp8 001F  
                          __CFG_HFOFST$ON 000000                            _cantidad_sleep 0005  
                         _TMR1_WriteTimer 0268                            __CFG_PBADEN$ON 000000  
                         __initialization 0284                              __end_of_main 00C4  
             ?_INTERRUPT_InterruptManager 000D                                    ??_main 0014  
                           __activetblptr 000002                   __end_of_TMR0_StartTimer 030A  
                 _inicializar_dispositivo 0176                                    _ANSELA 000F38  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  _ANSELD 000F3B                                    _ANSELE 000F3C  
                                  _T1GCON 000FCC                   TMR1_WriteTimer@timerVal 000D  
                                  i2l1218 027A                                    _OSCCON 000FD3  
                                  _WDTCON 000FD1                                    i2u3_48 020E  
                          __CFG_XINST$OFF 000000      __end_of_TMR1_DefaultInterruptHandler 02F4  
   __size_of_TMR1_DefaultInterruptHandler 0006              _TMR1_DefaultInterruptHandler 02EE  
                 __end_of_TMR1_StartTimer 0306                            __CFG_STVREN$ON 000000  
                        ?_TMR0_Initialize 000D                                    clear_0 028A  
                           ?_estimular_pw 000D                                    tblptru 000FF8  
TMR1_SetInterruptHandler@InterruptHandler 0011  TMR0_SetInterruptHandler@InterruptHandler 0011  
                 __end_of_TMR1_WriteTimer 0284             __size_of_INTERRUPT_Initialize 0004  
                        ?_TMR1_Initialize 000D                         _SYSTEM_Initialize 02B6  
                              __accesstop 0060                   __end_of__initialization 0290  
                      ?_SYSTEM_Initialize 000D                             ___rparam_used 000001  
             __size_of_desactivar_modulos 0018                            __pcstackCOMRAM 000D  
                     ??_SYSTEM_Initialize 0013                                 ?_TMR0_ISR 000D  
                               ?_TMR1_ISR 000D             ?_TMR1_DefaultInterruptHandler 000D  
                         _activar_modulos 0222                            ??_estimular_pw 0011  
               ??_inicializar_dispositivo 0011                          ?_TMR0_StartTimer 000D  
               __end_of_SYSTEM_Initialize 02CC                           __CFG_PLLCFG$OFF 000000  
                              __pnvCOMRAM 0001                        __CFG_CCP2MX$PORTC1 000000  
        __end_of_TMR0_SetInterruptHandler 02EE                   __size_of_TMR0_StopTimer 0004  
                        ?_TMR1_StartTimer 000D                                ??_TMR0_ISR 000D  
                              ??_TMR1_ISR 000F                        __CFG_CCP3MX$PORTB5 000000  
                 __size_of_TMR1_StopTimer 0004                           __CFG_WDTEN$SWON 000000  
                                 _OSCCON2 000FD2                                   i2u20_48 01BE  
                                 _OSCTUNE 000F9B                           __CFG_WDTPS$2048 000000  
                        ?_TMR1_WriteTimer 000D                           __CFG_PWRTEN$OFF 000000  
                                 __Hparam 0000                   __end_of_activar_modulos 0246  
         __end_of_inicializar_dispositivo 01A4                                   __Lparam 0000  
                                 __pcinit 0284                                   __ramtop 1000  
                                 __ptext0 003A                                   __ptext1 0176  
                                 __ptext2 029E                                   __ptext3 02FA  
                                 __ptext4 02FE                                   __ptext5 0222  
                                 __ptext6 00C4                                   __ptext7 0302  
                                 __ptext8 0306                                   __ptext9 02B6  
                               _T0CONbits 000FD5            ??_TMR1_DefaultInterruptHandler 000D  
                               _T1CONbits 000FCD                     _OSCILLATOR_Initialize 02CC  
       __size_of_TMR1_SetInterruptHandler 000A                  ??_PIN_MANAGER_Initialize 0011  
               ?_TMR1_SetInterruptHandler 0011                __size_of_SYSTEM_Initialize 0016  
                    end_of_initialization 0290                             __Lmediumconst 0000  
                    __end_of_estimular_pw 0136                                   postinc0 000FEE  
                _TMR0_SetInterruptHandler 02E4                          ?_activar_modulos 000D  
                          _TMR0_StopTimer 02FE              __end_of_INTERRUPT_Initialize 030E  
                       __size_of_TMR0_ISR 0026                         __size_of_TMR1_ISR 002E  
                          _TMR1_StopTimer 02FA                    ?_OSCILLATOR_Initialize 000D  
                     start_initialization 0284                  __size_of_TMR0_Initialize 0022  
         __size_of_PIN_MANAGER_Initialize 0040                __end_of_desactivar_modulos 02B6  
                  __end_of_TMR0_StopTimer 0302                             _g_contador_on 001A  
                __size_of_TMR1_Initialize 002A                    __end_of_TMR1_StopTimer 02FE  
                         _first_time_mode 000A                               __pbssCOMRAM 0016  
                             _cantidad_on 000B                               _active_mode 001D  
                   __size_of_estimular_pw 0072                               _ancho_pulso 0009  
                   _TMR0_InterruptHandler 0007                  __size_of_TMR0_StartTimer 0004  
                         ?_TMR0_StopTimer 000D                    _PIN_MANAGER_Initialize 0136  
                               __pintcode 0008          __end_of_TMR1_SetInterruptHandler 02E4  
                         ?_TMR1_StopTimer 000D              ??_INTERRUPT_InterruptManager 000F  
                        __CFG_PRICLKEN$ON 000000                  ?_inicializar_dispositivo 000D  
                            _estimular_pw 00C4                  __size_of_TMR1_StartTimer 0004  
                               _freq_stim 0016                      _INTERRUPT_Initialize 030A  
                       ??_TMR0_Initialize 0013                                  _LATAbits 000F89  
                             _g_stimulate 001C                                  _PIE1bits 000F9D  
                __size_of_TMR1_WriteTimer 001C       __size_of_INTERRUPT_InterruptManager 002E  
              ??_TMR0_SetInterruptHandler 0013                                  _PIR1bits 000F9E  
                                _RCONbits 000FD0                                  _TMR0_ISR 01FC  
                                _TMR1_ISR 01A4                         ??_TMR1_Initialize 0013  
                             _INTCON2bits 000FF1                     ?_INTERRUPT_Initialize 000D  
                                __Hrparam 0000                                  __Lrparam 0000  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTD2 000000  
                 ??_OSCILLATOR_Initialize 0011                         ??_TMR0_StartTimer 0011  
                _TMR1_SetInterruptHandler 02DA                     _TMR1_InterruptHandler 0001  
                                __ptext10 01D2                                  __ptext11 02DA  
                                __ptext20 02EE                                  __ptext12 0246  
                                __ptext21 01FC                                  __ptext13 02E4  
                              _T1GCONbits 000FCC                                  __ptext22 02F4  
                                __ptext14 0136                                  __ptext23 0000  
                                __ptext15 02CC                                  __ptext16 030A  
                                __ptext18 01A4                                  __ptext19 0268  
                       ??_TMR1_StartTimer 0011                             __size_of_main 008A  
    __end_of_TMR0_DefaultInterruptHandler 02FA     __size_of_TMR0_DefaultInterruptHandler 0006  
            _TMR0_DefaultInterruptHandler 02F4                                  int$flags 001E  
      __end_of_INTERRUPT_InterruptManager 0036                _INTERRUPT_InterruptManager 0008  
                       ??_TMR1_WriteTimer 000F                        _desactivar_modulos 029E  
                __size_of_activar_modulos 0024                                _INTCONbits 000FF2  
                     ?_desactivar_modulos 000D                    ??_INTERRUPT_Initialize 0011  
                                intlevel2 0000                          ??_TMR0_StopTimer 0011  
                 ?_PIN_MANAGER_Initialize 000D                          ??_TMR1_StopTimer 0011  
                    ??_desactivar_modulos 0011             ?_TMR0_DefaultInterruptHandler 000D  
                         _TMR0_Initialize 0246                         __CFG_T3CMX$PORTC0 000000  
          __end_of_PIN_MANAGER_Initialize 0176          __size_of_inicializar_dispositivo 002E  
                         _TMR1_Initialize 01D2  
